#include <iostream>
#include <random>
using namespace std;


// creating a node class 
class Node{
  public:
    int data;
    Node* next;
 // constructor
    Node(int data){
        this->data=data;
        this->next=NULL;
    }
};

// adding insertion at head

void insertionAtNode(Node* &head, int d){
    //create new node with data d
    Node* temp=new Node(d);
    // 
    temp->next=head;
    head=temp;
}

// print linkedlist or traverse
void print(Node* &head){
     Node* temp=head;
     while(temp!=NULL){
        cout<<temp->data<<" ";
        temp=temp->next;
     }
     cout<<endl;
}
// insert at the end of likedlist

void insertionAtTail(Node* &tail, int d){
   Node* temp= new Node(d);
    tail->next=temp;
    tail=temp;
}

// at value at defined position 
void insertionAtPosition(Node* &head, Node* &tail, int pos, int d){
     Node* temp=head;
     // inserting at first pos
     if(pos==1){
        insertionAtNode(head, d);
        return;
     }
     int ct=1;
     while(ct<pos-1){
        temp=temp->next;
        ct++;
     }
     // inserting at last pos
     if(temp->next==NULL){
        insertionAtTail(tail, d);
     }
     // create node for d
     Node* nodeToInsert= new Node(d);
     nodeToInsert-> next=temp->next;
     temp->next=nodeToInsert;
}
int main(){
    // creating new node
     Node* node1= new Node(10);
     Node* tail=node1;
     //cout<<node1->data<<endl;
     //cout<<node1->next<<endl;
     Node *head=node1;
     print(head);
     insertionAtTail(tail, 20);
     insertionAtPosition(head,tail, 2, 15);
     insertionAtPosition(head,tail, 2,25);
     print(head);
}
